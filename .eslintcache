[{"C:\\wamp64\\www\\lol\\src\\index.tsx":"1","C:\\wamp64\\www\\lol\\src\\reportWebVitals.ts":"2","C:\\wamp64\\www\\lol\\src\\App.tsx":"3","C:\\wamp64\\www\\lol\\src\\views\\homepage\\Homepage.tsx":"4","C:\\wamp64\\www\\lol\\src\\components\\header\\Header.tsx":"5","C:\\wamp64\\www\\lol\\src\\components\\footer\\Footer.tsx":"6","C:\\wamp64\\www\\lol\\src\\helper\\WalletHelp.tsx":"7","C:\\wamp64\\www\\lol\\src\\helper\\WalletConnector.tsx":"8","C:\\wamp64\\www\\lol\\src\\components\\ConnectWallet\\WalletDropdown.tsx":"9","C:\\wamp64\\www\\lol\\src\\components\\button\\Button.tsx":"10","C:\\wamp64\\www\\lol\\src\\components\\homepage\\community\\Community.tsx":"11","C:\\wamp64\\www\\lol\\src\\components\\homepage\\benefits\\Benefits.tsx":"12","C:\\wamp64\\www\\lol\\src\\components\\homepage\\homepage-hero\\HomepageHero.tsx":"13","C:\\wamp64\\www\\lol\\src\\components\\ConnectWallet\\index.tsx":"14","C:\\wamp64\\www\\lol\\src\\helper\\index.tsx":"15","C:\\wamp64\\www\\lol\\src\\utils\\Utils.tsx":"16","C:\\wamp64\\www\\lol\\src\\utils\\Interact.tsx":"17","C:\\wamp64\\www\\lol\\src\\components\\Mint\\index.tsx":"18","C:\\wamp64\\www\\lol\\src\\components\\Mint\\WinterCheckout.tsx":"19","C:\\wamp64\\www\\lol\\src\\components\\homepage\\vote\\Vote.tsx":"20","C:\\wamp64\\www\\lol\\src\\components\\homepage\\drop\\Drop.tsx":"21","C:\\wamp64\\www\\lol\\src\\components\\homepage\\joke-ranking\\JokeRanking.tsx":"22","C:\\wamp64\\www\\lol\\src\\components\\homepage\\roadmap\\Roadmap.tsx":"23","C:\\wamp64\\www\\lol\\src\\components\\homepage\\jokestars\\Jokestars.tsx":"24","C:\\wamp64\\www\\lol\\src\\components\\homepage\\vote\\vote-card\\VoteCard.tsx":"25","C:\\wamp64\\www\\lol\\src\\components\\homepage\\drop\\drop-card\\DropCard.tsx":"26","C:\\wamp64\\www\\lol\\src\\components\\homepage\\roadmap\\roadmap-card\\RoadmapCard.tsx":"27","C:\\wamp64\\www\\lol\\src\\components\\homepage\\joke-ranking\\joke-ranking-card\\JokeRankingCard.tsx":"28","C:\\wamp64\\www\\lol\\src\\components\\homepage\\jokestars\\jokestar\\Jokestar.tsx":"29"},{"size":1674,"mtime":1684320350932,"results":"30","hashOfConfig":"31"},{"size":425,"mtime":1682607430399,"results":"32","hashOfConfig":"31"},{"size":401,"mtime":1683324827094,"results":"33","hashOfConfig":"31"},{"size":2706,"mtime":1684753193074,"results":"34","hashOfConfig":"31"},{"size":3851,"mtime":1684745878009,"results":"35","hashOfConfig":"31"},{"size":1715,"mtime":1684320350850,"results":"36","hashOfConfig":"31"},{"size":603,"mtime":1684320350923,"results":"37","hashOfConfig":"31"},{"size":1206,"mtime":1684320350921,"results":"38","hashOfConfig":"31"},{"size":2599,"mtime":1684320350840,"results":"39","hashOfConfig":"31"},{"size":567,"mtime":1683320406133,"results":"40","hashOfConfig":"31"},{"size":1395,"mtime":1684320350904,"results":"41","hashOfConfig":"31"},{"size":38356,"mtime":1684320350901,"results":"42","hashOfConfig":"31"},{"size":3877,"mtime":1684745928083,"results":"43","hashOfConfig":"31"},{"size":3619,"mtime":1684320350842,"results":"44","hashOfConfig":"31"},{"size":2424,"mtime":1684320350927,"results":"45","hashOfConfig":"31"},{"size":582,"mtime":1684320350935,"results":"46","hashOfConfig":"31"},{"size":2130,"mtime":1684320350934,"results":"47","hashOfConfig":"31"},{"size":14027,"mtime":1684320350847,"results":"48","hashOfConfig":"31"},{"size":3535,"mtime":1684320350843,"results":"49","hashOfConfig":"31"},{"size":4010,"mtime":1683622684423,"results":"50","hashOfConfig":"31"},{"size":2257,"mtime":1684320350906,"results":"51","hashOfConfig":"31"},{"size":3043,"mtime":1683529997611,"results":"52","hashOfConfig":"31"},{"size":3001,"mtime":1684320350912,"results":"53","hashOfConfig":"31"},{"size":3299,"mtime":1684846017548,"results":"54","hashOfConfig":"31"},{"size":1151,"mtime":1683286933690,"results":"55","hashOfConfig":"31"},{"size":1899,"mtime":1684751704382,"results":"56","hashOfConfig":"31"},{"size":1192,"mtime":1683324069649,"results":"57","hashOfConfig":"31"},{"size":1228,"mtime":1683622750907,"results":"58","hashOfConfig":"31"},{"size":968,"mtime":1684746154269,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"6iz6n",{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":3,"source":"75","usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"62"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},"C:\\wamp64\\www\\lol\\src\\index.tsx",[],["132","133"],"C:\\wamp64\\www\\lol\\src\\reportWebVitals.ts",[],"C:\\wamp64\\www\\lol\\src\\App.tsx",[],"C:\\wamp64\\www\\lol\\src\\views\\homepage\\Homepage.tsx",["134"],"import React from 'react';\r\nimport HomepageHero from '../../components/homepage/homepage-hero/HomepageHero';\r\nimport Jokestars from '../../components/homepage/jokestars/Jokestars';\r\nimport Drop from '../../components/homepage/drop/Drop';\r\nimport nft1 from \"../../assets/images/nft_1.png\";\r\nimport nft2 from \"../../assets/images/nft_2.png\";\r\nimport nft3 from \"../../assets/images/nft_3.png\";\r\nimport thumb from \"../../assets/images/thumb.png\";\r\n\r\nimport Vote from \"../../components/homepage/vote/Vote\";\r\nimport JokeRanking from \"../../components/homepage/joke-ranking/JokeRanking\";\r\nimport Benefits from \"../../components/homepage/benefits/Benefits\";\r\nimport Roadmap from \"../../components/homepage/roadmap/Roadmap\";\r\nimport Community from \"../../components/homepage/community/Community\";\r\nimport Mint from \"../../components/Mint/index\"\r\nfunction Homepage() {\r\n\r\n    const dropCards = [\r\n        {\r\n            imageUrl: nft1,\r\n            time: '1h : 35m : 01s',\r\n            thumbUrl: thumb,\r\n            name: 'James Smith',\r\n            nickname: '@jamessmith',\r\n            ethPrice: '420. 99',\r\n            category: 'Gold'\r\n        },\r\n        {\r\n            imageUrl: nft2,\r\n            time: '1h : 35m : 01s',\r\n            thumbUrl: thumb,\r\n            name: 'James Smith',\r\n            nickname: '@jamessmith',\r\n            ethPrice: '420. 99',\r\n            category: 'Signature'\r\n        },\r\n        {\r\n            imageUrl: nft3,\r\n            time: '1h : 35m : 01s',\r\n            thumbUrl: thumb,\r\n            name: 'James Smith',\r\n            nickname: '@jamessmith',\r\n            ethPrice: '420. 99',\r\n            category: 'Silver'\r\n        }\r\n    ];\r\n\r\n    const buttons = [\r\n        {\r\n            text: 'All Categories',\r\n            url: '#',\r\n            isActive: true,\r\n            isLink: false,\r\n        },\r\n        {\r\n            text: 'Signature',\r\n            url: '#',\r\n            isActive: false,\r\n            isLink: false,\r\n        },\r\n        {\r\n            text: 'Silver',\r\n            url: '#',\r\n            isActive: false,\r\n            isLink: false,\r\n        },\r\n        {\r\n            text: 'Gold',\r\n            url: '#',\r\n            isActive: false,\r\n            isLink: false,\r\n        },\r\n        {\r\n            text: 'Special Purpose',\r\n            url: '#',\r\n            isActive: false,\r\n            isLink: false,\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <HomepageHero />\r\n            <Jokestars />\r\n            <Drop dropCards={dropCards} buttons={buttons} />\r\n            <Vote />\r\n            <JokeRanking />\r\n            <Benefits />\r\n            <Roadmap />\r\n            <Community />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Homepage;","C:\\wamp64\\www\\lol\\src\\components\\header\\Header.tsx",["135","136"],"import React, { useState, useEffect } from \"react\";\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport Button from '../button/Button';\r\nimport logoImage from '../../assets/images/lol-logo.svg'\r\nimport './Header.css';\r\nimport { ButtonDT } from \"../../Types\";\r\nimport { isMobile } from \"../../helper\";\r\nimport WalletDropdown from \"../ConnectWallet/WalletDropdown\";\r\nimport connectors from \"../../helper/WalletConnector\"\r\nimport activateInjectedProvider from \"../../helper/WalletHelp\"\r\nimport ConnectWallet from \"../ConnectWallet\";\r\ndeclare const window: any\r\n\r\nfunction Header() {\r\n\r\n    const { account, active, activate }: any = useWeb3React();\r\n    const [isOpen, setIsOpen]: any = useState(false);\r\n\r\n    useEffect(() => {\r\n        const provider = localStorage.getItem(\"provider\");\r\n        if (provider) {\r\n            if (provider === 'injected') {\r\n                if (!isMobile() && !window.ethereum) {\r\n                    window.open('https://metamask.io/download/', '_blank');\r\n                } else {\r\n                    activateInjectedProvider('MetaMask');\r\n                    activate(connectors.injected);\r\n                }\r\n            } else activate(connectors[provider]);\r\n        }\r\n\r\n    }, []);\r\n\r\n    const button: ButtonDT = {\r\n        text: 'Connect Wallet',\r\n        url: '#',\r\n        isActive: true,\r\n        isLink: true\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <nav className=\"navbar navbar-expand-lg\">\r\n                <div className=\"container\">\r\n                    <a className=\"navbar-brand\" href=\"#\"><img className=\"logo-img\" src={logoImage} alt=\"\" /></a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                        data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link active\" href=\"/#\">Home</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"/#jokestars\">Jokestars</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"/#drop\">Drop 01</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"/#vote\">Vote</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"/#roadmap\">Roadmap</a>\r\n                            </li>\r\n                            <li className=\"nav-item ml-lg-2\">\r\n                                <a className=\"nav-link\" href=\"/#community\">Community</a>\r\n                            </li>\r\n                            <li className=\"nav-item ml-lg-2\">\r\n                                {(!active) &&\r\n                                    <Button button={button} onClick={() => setIsOpen(!isOpen)} />\r\n                                }\r\n                                {active && account && <>\r\n                                    <WalletDropdown />\r\n                                </>}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                </div>\r\n            </nav>\r\n            <ConnectWallet setIsOpen={setIsOpen} isOpen={isOpen} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Header;","C:\\wamp64\\www\\lol\\src\\components\\footer\\Footer.tsx",["137","138","139","140"],"import React from 'react';\r\n\r\nimport './Footer.css';\r\n\r\nimport logo from '../../assets/images/lol-logo.svg';\r\nimport fb from '../../assets/images/fb.svg';\r\nimport discord from '../../assets/images/discord.svg';\r\nimport ig from '../../assets/images/ig.svg';\r\nimport twitter from '../../assets/images/twitter.svg';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <div className=\"main-area\">\r\n                <div className=\"footer-logo\">\r\n                    <img src={logo} alt=\"lol-logo\"/>\r\n                </div>\r\n                <ul className=\"sections\">\r\n                    {/* <li><a href=\"#jokestars\">Jokestars</a></li>\r\n                    <li><a href=\"#drop\">Drop 01</a></li>\r\n                    <li><a href=\"#vote\">Vote</a></li>\r\n                    <li><a href=\"#roadmap\">Roadmap</a></li> */}\r\n                    <li><a href=\"#community\">Community</a></li>\r\n                </ul>\r\n                <div className=\"socials\">\r\n                    <ul>\r\n                        {/* <li><a href=\"#\"><img src={fb} alt=\"facebook\"/></a></li> */}\r\n                        <li><a href=\"https://discord.gg/laughoutlabs\" target='_blank'><img src={discord} alt=\"discord\"/></a></li>\r\n                        <li><a href=\"https://instagram.com/nftsareajoke\" target='_blank'><img src={ig} alt=\"ig\"/></a></li>\r\n                        <li><a href=\"https://twitter.com/laughoutlabs\" target='_blank'><img src={twitter} alt=\"twitter\"/></a></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div className=\"row copyright\">\r\n                <p>2023 Copyright ©  |  All rights reserved.</p>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","C:\\wamp64\\www\\lol\\src\\helper\\WalletHelp.tsx",[],"C:\\wamp64\\www\\lol\\src\\helper\\WalletConnector.tsx",[],"C:\\wamp64\\www\\lol\\src\\components\\ConnectWallet\\WalletDropdown.tsx",["141","142","143"],"import React, { useEffect, useState } from 'react'\n\nimport { UncontrolledDropdown, DropdownMenu, DropdownToggle, DropdownItem, Button } from 'reactstrap'\n\nimport { useWeb3React } from '@web3-react/core';\nimport { truncateAddress, getWalletLogo } from \"../../helper/index\"\n\n\nconst WalletDropdown = () => {\n    const { account, deactivate, active } = useWeb3React();\n    const [walletLogo, setWalletLogo]: any = useState(null)\n    const [walletaccount, setWalletAccount] = useState('')\n\n    useEffect(() => {\n        if (active && account) {\n            const provider = localStorage.getItem('provider')\n            if (provider !== null) {\n                setWalletLogo(getWalletLogo(provider))\n            } else {\n                setTimeout(() => {\n                    setWalletLogo(getWalletLogo(provider))\n                }, 200);\n            }\n            setWalletAccount(account)\n        }\n    }, [active, account])\n\n    const disconnectWallet = () => {\n        localStorage.removeItem('wallet');\n        localStorage.removeItem('walletconnect');\n        localStorage.removeItem('coinbase');\n        localStorage.removeItem('metamask');\n        localStorage.removeItem('provider');\n        deactivate()\n    }\n\n    return (\n        <>\n            {active && account &&\n                <div className='mainTopMenu d-flex justify-content-end'>\n                    <UncontrolledDropdown className='dropdown-user nav-item'>\n                        <DropdownToggle tag='div' className='align-items-center' onClick={e => e.preventDefault()} >\n\n                            <a href=\"javascript:void(0)\" className=\"lol-btn active d-flex\">\n                                {walletLogo && walletLogo !== null && <img src={walletLogo} width={25} className='metamask-img mx-2' alt='demo' />}\n\n                                {\n                                    (walletaccount && walletaccount !== '') ? <div className='d-flex align-items-center'>\n                                        {truncateAddress(walletaccount)}\n                                    </div> : <p>No user found</p>\n                                }\n                            </a>\n\n                        </DropdownToggle>\n                        <DropdownMenu end>\n                            <DropdownItem onClick={disconnectWallet}  >\n                                <span className='align-middle'>Disconnect</span>\n                            </DropdownItem>\n                        </DropdownMenu>\n                    </UncontrolledDropdown>\n                </div>\n            }\n        </>\n    )\n}\nexport default WalletDropdown","C:\\wamp64\\www\\lol\\src\\components\\button\\Button.tsx",[],"C:\\wamp64\\www\\lol\\src\\components\\homepage\\community\\Community.tsx",["144","145"],"import React, {useRef} from 'react';\r\nimport Button from \"../../button/Button\";\r\nimport {ButtonDT} from \"../../../Types\";\r\nimport Mint from '../../Mint'\r\n\r\nimport './Community.css';\r\n\r\nimport animals from '../../../assets/images/animals.png';\r\nimport net from '../../../assets/images/net.png';\r\nimport {useIsVisible} from \"../../../utils/Utils\";\r\n\r\nfunction Community() {\r\n    const ref = useRef(null);\r\n    const isVisible = useIsVisible(ref);\r\n\r\n    const button: ButtonDT = {\r\n        text: 'Join the Waitlist',\r\n        url: '#',\r\n        isActive: true,\r\n        isLink: true\r\n    };\r\n\r\n    return (\r\n        <section id=\"community\" className={isVisible? 'fade-in-visible show': 'fade-in-visible'} ref={ref}>\r\n            <div className=\"community-inner\">\r\n                <h2>Community</h2>\r\n                <p>We believe that comedy is a powerful tool for bringing people together and promoting kindness and understanding. That's why we're building a community of like-minded, kind-spirited people who all share a common interest in comedy. Whether you're a comedian, a fan of comedy, or just someone who loves to laugh, our community is the perfect place for you.</p>\r\n                <Mint />\r\n                <img src={animals} alt=\"animals\"/>\r\n            </div>\r\n            <img src={net} alt=\"net-bg\" className=\"net-bg\"/>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Community;","C:\\wamp64\\www\\lol\\src\\components\\homepage\\benefits\\Benefits.tsx",[],"C:\\wamp64\\www\\lol\\src\\components\\homepage\\homepage-hero\\HomepageHero.tsx",[],"C:\\wamp64\\www\\lol\\src\\components\\ConnectWallet\\index.tsx",["146","147"],"import React, { useEffect } from 'react';\nimport { Button, Modal, ModalBody } from 'reactstrap'\n/* wallet imports */\nimport { useWeb3React } from '@web3-react/core'\nimport connectors from \"../../helper/WalletConnector\"\nimport activateInjectedProvider from \"../../helper/WalletHelp\"\nimport { AiOutlineCloseCircle } from \"react-icons/ai\"\n\nimport IconOne from '../../assets/images/icon-1.png';\nimport IconThree from '../../assets/images/icon-3.png';\n\n\nfunction ConnectWallet({ isOpen, setIsOpen }: any) {\n    \n    const { account, activate, active } = useWeb3React();\n\n    const connectWallet = (walletName: any) => {\n\n        localStorage.setItem('provider', walletName)\n        if (walletName === 'injected') {\n            activateInjectedProvider('injected')\n            activate(connectors.injected)\n        } else if (walletName === 'walletConnect') {\n            activate(connectors.walletConnect);\n        } else if (walletName === 'coinbaseWallet') {\n            activate(connectors.coinbaseWallet)\n        }\n    }\n\n    useEffect(() => {\n        if (active && account) {\n            setIsOpen(false)\n        }\n    }, [active, account])\n\n    return (\n        <>\n            <Modal className='wallets-modal' isOpen={isOpen} toggle={() => setIsOpen(false)} size=\"md\" >\n                <ModalBody className='mt-30 mb-30'>\n                    <div className=\"closeButton float-right\" onClick={() => setIsOpen(false)}><AiOutlineCloseCircle size={30} className='pointer' /></div>\n                    <div className=\"row mt-5\">\n                        <div className=\"col-lg-6 col-md-6 d-none d-lg-block\">\n                            <div\n                                className=\"appie-single-service text-center mt-30 wow animated fadeInUp\"\n                                data-wow-duration=\"2000ms\"\n                                data-wow-delay=\"200ms\"\n                            >\n                                <div className=\"icon pb-2\">\n                                    <img src={IconOne} alt=\"\" className='wallet-img' />\n                                </div>\n                                <h4 className=\"appie-title text-white pt-1\">Metamask</h4>\n                                <div className='py-3'>\n                                    <button className='lol-btn active' type='submit' onClick={() => connectWallet('injected')}>Select</button>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-lg-6 col-md-6\">\n                            <div\n                                className=\"appie-single-service text-center mt-30 item-3 wow animated fadeInUp\"\n                                data-wow-duration=\"2000ms\"\n                                data-wow-delay=\"600ms\"\n                            >\n                                <div className=\"icon pb-2\">\n                                    <img src={IconThree} alt=\"\" className='wallet-img' />\n                                </div>\n                                <div>\n                                    <h4 className=\"appie-title text-white pt-3\">WalletConnect</h4>\n                                </div>\n\n                                <div className='py-3'>\n                                    <button className='lol-btn active' type='submit' onClick={() => connectWallet('walletConnect')}>Select</button>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n\n                </ModalBody>\n            </Modal>\n        </>\n    );\n}\n\nexport default ConnectWallet;\n","C:\\wamp64\\www\\lol\\src\\helper\\index.tsx",[],"C:\\wamp64\\www\\lol\\src\\utils\\Utils.tsx",["148"],"import React, {useEffect, useState} from \"react\";\n\nexport function useIsVisible(ref: any) {\n    const [isIntersecting, setIntersecting] = useState(false);\n\n    useEffect(() => {\n        const observer = new IntersectionObserver(([entry]) => {\n            if (entry.isIntersecting) {\n                setIntersecting(true);\n                observer.disconnect();\n            }\n        });\n\n        if (ref.current) {\n            observer.observe(ref.current);\n        }\n\n        return () => {\n            observer.disconnect();\n        };\n    }, [ref]);\n\n    return isIntersecting;\n}","C:\\wamp64\\www\\lol\\src\\utils\\Interact.tsx",[],"C:\\wamp64\\www\\lol\\src\\components\\Mint\\index.tsx",["149","150","151","152","153","154","155","156"],"import React, { Fragment, useState, useEffect } from \"react\"\nimport { Button, Col, Row, Modal, ModalBody } from \"reactstrap\"\nimport { AiOutlineCloseCircle } from \"react-icons/ai\"\nimport { mintNFT } from \"../../utils/Interact\";\nimport WinterCheckout from \"../../components/Mint/WinterCheckout\";\nimport ConnectWallet from \"../../components/ConnectWallet\";\nimport nft1 from \"../../assets/images/nft_1.png\";\nimport nft2 from \"../../assets/images/nft_2.png\";\nimport nft3 from \"../../assets/images/nft_3.png\";\nimport { useWeb3React } from '@web3-react/core'\nimport { useAlert } from \"react-alert\";\nimport Web3 from \"web3\"\nimport { ethers, providers } from \"ethers\"\nimport WalletConnectProvider from \"@walletconnect/web3-provider\"\nimport { isActiveSale, GetWhitelisted } from \"../../helper\";\nimport { Minus, MinusSquare, PlusSquare } from \"react-feather\";\n\ndeclare const window: any\n\nrequire('dotenv').config()\n\nconst WINTER_PRODUCTION = process.env.REACT_APP_WINTER_ENVIRONMENT\nconst WINTER_PROJECT_ID = process.env.REACT_APP_WINTER_PROJECT_ID\n\nconst BannerSection = () => {\n\n    const alert = useAlert()\n    const { active, account } = useWeb3React()\n    let provider = localStorage.getItem('provider')\n\n    const RpcHttpUrl: any = process.env.REACT_APP_RPC_HTTP_URL;\n\n    const web3 = new Web3(new Web3.providers.HttpProvider(RpcHttpUrl));\n\n    const [payModalOpen, setPayModalOpen] = useState(false);\n    const [tierModalOpen, setTierModalOpen] = useState(false)\n    const [countModalOpen, setCountModalOpen] = useState(false);\n    const [fullModalOpen, setFullModalOpen] = useState(false);\n    const [showWinter, setShowWinter] = useState(false);\n    const [isOpen, setIsOpen] = useState(false);\n    const [typeSelected, setTypeSelected] = useState(null);\n    const [count, setCount] = useState(1);\n    const [tier, setTier] = useState('SILVER');\n\n    useEffect(() => {\n        if (active && account && typeSelected !== null) {\n            getAssetData(typeSelected)\n            setIsOpen(false)\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [active, account])\n\n    const getAssetData = (type: any) => {\n\n        if (type === 'wallet' && !active && account === undefined && provider === null) {\n            setPayModalOpen(!payModalOpen)\n            setIsOpen(true)\n            return false\n        }\n\n        setTypeSelected(type)\n\n        if (type === 'card') {\n            creditCardMint() // CARD\n        } else if (type === 'wallet') {\n            setCountModalOpen(!countModalOpen)\n        }\n        setPayModalOpen(!payModalOpen)\n    }\n\n    const creditCardMint = async () => {\n        setShowWinter(!showWinter)\n        setTypeSelected(null)\n    }\n\n    let providerrs: any = null\n\n    const handleProvider = async () => {\n\n        const walletConnectProvider = new WalletConnectProvider({\n            infuraId: process.env.REACT_APP_INFURA_ID, // Required\n            qrcode: true\n        })\n        await walletConnectProvider.enable()\n        providerrs = new providers.Web3Provider(walletConnectProvider)\n    }\n\n    const walletMint = async () => {\n\n        setCountModalOpen(!countModalOpen)\n\n        if (account) {\n\n            if (window.ethereum) {\n                providerrs = new ethers.providers.Web3Provider(window.ethereum)\n            } else {\n                handleProvider()\n            }\n\n            const chainId = await providerrs.send('eth_chainId')\n\n            if (chainId !== '0x1') {\n                const hexChainId = ethers.utils.hexValue(1)\n\n                try {\n                    await providerrs.send('wallet_switchEthereumChain', [{ chainId: hexChainId }])\n                } catch (switchError: any) {\n                    if (switchError.code === 4902) {\n                        console.log(\"This network is not available in your metamask, please add it\")\n                    }\n                    console.log(\"Failed to switch to the network\")\n                }\n                return false\n            }\n\n            const whitelist: any = await GetWhitelisted(account);\n\n            if (whitelist) {\n\n                var proofArr = [...whitelist.body];\n\n                if (!whitelist.status) {\n                    alert.error(\"Mint is not available now!\");\n                    return false\n                }\n\n                if (whitelist.saleType === '1' && proofArr.length === 0) {\n                    alert.error(\"You are not in the whitelist please wait for the public sale\");\n                    return false\n                }\n\n                const response = await mintNFT(count, whitelist.body, tier)\n\n                if (response && response.success === true) {\n                    alert.info(\"In Progress\", { timeout: 0 })\n                    const interval = setInterval(() => {\n                        web3.eth.getTransactionReceipt(response.hash, (err, res) => {\n                            if (res) {\n                                clearInterval(interval)\n                                alert.removeAll()\n                                if (res.status === true) {\n                                    alert.success(\"Successful!\", { timeout: 5000 })\n                                } else {\n                                    alert.error(\"Failed!\", { timeout: 5000 })\n                                }\n                            }\n                        });\n                    }, 4000);\n\n                    setTypeSelected(null)\n                    setIsOpen(false)\n                } else {\n                    alert.removeAll()\n                    alert.error(\"Failed!\", { timeout: 5000 })\n                }\n\n            }\n        }\n\n        setCountModalOpen(!countModalOpen)\n\n    }\n\n    const handleTier = (type: any) => {\n        setTier(type)\n        setTierModalOpen(!tierModalOpen)\n        setPayModalOpen(!payModalOpen)\n    }\n\n    return (\n        <Fragment>\n\n            <span className=\"lol-btn active d-block\" style={{ cursor: \"pointer\" }} onClick={() => setTierModalOpen(!tierModalOpen)}> Mint Now</span>\n            <Modal className=\"wallets-modal\" isOpen={tierModalOpen} toggle={() => setTierModalOpen(!tierModalOpen)} size=\"xl\" >\n                <ModalBody className=\"mt-30 mb-30\">\n                    <div className=\"closeButton\" onClick={() => setTierModalOpen(!tierModalOpen)}><AiOutlineCloseCircle size={30} color=\"white\" className='pointer' /></div>\n                    <Row className=\"mt-3\">\n                        <Col md='12'>\n                            <h3 className=\"appie-title text-white text-center pt-2\">Select Tier</h3>\n                            <div className=\"row mt-5\">\n                                <div className=\"col-lg-4 col-md-4\">\n                                    <div\n                                        className=\"appie-single-service text-center mt-30 wow animated fadeInUp\"\n                                        data-wow-duration=\"2000ms\"\n                                        data-wow-delay=\"200ms\"\n                                    >\n                                        <img src={nft2} className='w-75' alt=\"nft-image\" />\n                                        <h4 className=\"appie-title text-white pt-3\">SIGNATURE</h4>\n                                        <div className='py-3'>\n                                            <button className='lol-btn active' type='submit' onClick={() => handleTier(1)}>SELECT</button>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-lg-4 col-md-4\">\n                                    <div\n                                        className=\"appie-single-service text-center mt-30 wow animated fadeInUp\"\n                                        data-wow-duration=\"2000ms\"\n                                        data-wow-delay=\"200ms\"\n                                    >\n                                        <img src={nft3} className='w-75' alt=\"nft-image\" />\n                                        <h4 className=\"appie-title text-white pt-3\">SILVER</h4>\n                                        <div className='py-3'>\n                                            <button className='lol-btn active' type='submit' onClick={() => handleTier(2)}>SELECT</button>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-lg-4 col-md-4\">\n                                    <div\n                                        className=\"appie-single-service text-center mt-30 wow animated fadeInUp\"\n                                        data-wow-duration=\"2000ms\"\n                                        data-wow-delay=\"200ms\"\n                                    >\n                                        <img src={nft1} className='w-75' alt=\"nft-image\" />\n                                        <h4 className=\"appie-title text-white pt-3\">GOLD</h4>\n                                        <div className='py-3'>\n                                            <button className='lol-btn active' type='submit' onClick={() => handleTier(3)}>SELECT</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </Col>\n                    </Row>\n                </ModalBody>\n            </Modal>\n\n            <Modal className=\"wallets-modal\" isOpen={payModalOpen} toggle={() => setPayModalOpen(!payModalOpen)} size=\"md\" >\n                <ModalBody className=\"mt-30 mb-30\">\n                    <div className=\"closeButton\" onClick={() => setPayModalOpen(!payModalOpen)}><AiOutlineCloseCircle size={30} color=\"white\" className='pointer' /></div>\n                    <Row className=\"mt-3\">\n                        <Col md='12'>\n                            <div className='px-2 py-4 text-center'>\n                                <div className='wallet-wrapper text-center'>\n                                    {/* <div className='d-flex align-items-center justify-content-center lol-btn'>\n                                        <img src={require(`../../assets/images/credit-card.png`).default} width={50} className='img-fluid' alt=\"\" />\n                                        <div className='wallet-name text-uppercase' onClick={() => { getAssetData('card') }} style={{ cursor: \"pointer\" }}>Mint with Credit Card</div>\n                                    </div> */}\n                                    <div className=' d-flex align-items-center justify-content-center lol-btn mt-4'>\n                                        <img src={require(`../../assets/images/metamask-icon.png`).default} width={50} className='img-fluid' alt=\"\" />\n                                        <div className='wallet-name text-uppercase' onClick={() => { getAssetData('wallet') }} style={{ cursor: \"pointer\" }}>Mint with Wallet</div>\n                                    </div>\n                                </div>\n                            </div>\n                        </Col>\n                    </Row>\n                </ModalBody>\n            </Modal>\n\n            <Modal className=\"wallets-modal\" isOpen={countModalOpen} toggle={() => setCountModalOpen(!countModalOpen)} size=\"md\" >\n                <ModalBody className=\"mt-30 mb-30\">\n                    <div className=\"closeButton pb-5\" onClick={() => setCountModalOpen(!countModalOpen)}><AiOutlineCloseCircle size={30} color=\"white\" className='pointer' /></div>\n                    <Row className=\"mt-3\">\n                        <Col md='12'>\n                            <div className='px-2 py-4 text-center'>\n                                <h4 className=\"text-white appie-title mb-2\">How many would you like to mint?</h4>\n                                <div className=\"d-flex align-items-center justify-content-center text-center mb-3\">\n                                    <div className=\"cursor-pointer text-white\" onClick={() => { setCount((n) => n > 1 ? n - 1 : 1); }}><MinusSquare size={35} /></div>\n                                    <input className=\"input-count form-control\" placeholder={'Count'} min={1} max={10} value={count} />\n                                    <div className=\"cursor-pointer text-white\" onClick={() => { setCount((n) => n < 10 ? n + 1 : 10); }}><PlusSquare size={35} /></div>\n                                </div>\n\n                                <div className='wallet-item d-flex align-items-center justify-content-center wal-button mt-4'>\n                                    <div className='lol-btn active py-3 ml-0' onClick={() => { walletMint() }} style={{ cursor: \"pointer\" }}>SUBMIT</div>\n                                </div>\n                            </div>\n                        </Col>\n                    </Row>\n                </ModalBody>\n            </Modal>\n\n            {/* <Modal className=\"wallets-modal-full wallets-modal\" centered isOpen={fullModalOpen} size=\"lg\" >\n                <ModalBody className=\"mt-30 mb-30 d-flex\">\n                    <Row className=\"mt-3 d-flex align-items-center justify-content-center\">\n                        <Col md='12'>\n                            <p className=\"px-3 text-white\">Hi Guys, sadly our mint is delayed until tomorrow (May 16th 2023) due to high Ethereum network traffic and gas fees. Our public sale will go live at 6pm EST. Please check back in tomorrow.</p>\n                        </Col>\n                    </Row>\n                </ModalBody>\n            </Modal> */}\n\n            <WinterCheckout\n                projectId={WINTER_PROJECT_ID}\n                showModal={showWinter}\n                production={WINTER_PRODUCTION === 'production'}\n                onClose={() => { setShowWinter(false) }}\n                extraMintParams={{ \"tier\": tier }}\n            />\n\n            <ConnectWallet setIsOpen={setIsOpen} isOpen={isOpen} />\n        </Fragment >\n    )\n}\nexport default BannerSection","C:\\wamp64\\www\\lol\\src\\components\\Mint\\WinterCheckout.tsx",["157"],"import React, { useEffect, useState } from \"react\";\n\nconst WinterCheckout = ({\n    onSuccess,\n    onClose,\n    projectId,\n    showModal,\n    walletAddress,\n    email,\n    mintQuantity,\n    erc1155Video,\n    title,\n    brandImage,\n    extraMintParams,\n    priceFunctionParams,\n    production,\n    testnet,\n}: any) => {\n    const [projectUrl, setProjectUrl] = useState(\"\");\n\n    useEffect(() => {\n        if (typeof window !== \"undefined\") {\n            const handleWindowEvent = (e: any) => {\n                const { data } = e;\n                if (data === \"closeWinterCheckoutModal\") {\n                    onClose?.();\n                } else if (data.name === \"successfulWinterCheckout\") {\n                    const {\n                        transactionhash,\n                        email,\n                        nftQuantity,\n                        amountUSD,\n                        nftTokenIds,\n                        nftUrls,\n                        openseaUrls,\n                    } = data;\n                    onSuccess?.(\n                        transactionhash,\n                        email,\n                        nftQuantity,\n                        amountUSD,\n                        nftTokenIds,\n                        nftUrls,\n                        openseaUrls\n                    );\n                }\n            };\n            window.addEventListener(\"message\", handleWindowEvent);\n            return () => window.removeEventListener(\"message\", handleWindowEvent);\n        }\n    }, [onClose, onSuccess]);\n\n    useEffect(() => {\n        let queryString = \"projectId=\" + projectId;\n        if (walletAddress != null) {\n            queryString += \"&walletAddress=\" + walletAddress;\n        }\n        if (email != null) {\n            queryString += \"&email=\" + email;\n        }\n        if (mintQuantity != null) {\n            queryString += \"&mintQuantity=\" + mintQuantity;\n        }\n        if (erc1155Video != null) {\n            queryString += \"&erc1155Video=\" + erc1155Video;\n        }\n        if (title != null) {\n            queryString += \"&title=\" + title;\n        }\n        if (brandImage) {\n            queryString += `&brandImage=${brandImage}`;\n        }\n        if (extraMintParams != null) {\n            queryString += `&extraMintParams=${encodeURIComponent(\n                JSON.stringify(extraMintParams)\n            )}`;\n        }\n        if (priceFunctionParams != null) {\n            queryString += `&priceFunctionParams=${encodeURIComponent(\n                JSON.stringify(priceFunctionParams)\n            )}`;\n        }\n\n        const url = production\n            ? \"https://checkout.usewinter.com/?\" + queryString\n            : testnet === \"goerli\"\n                ? \"https://goerli-sandbox-checkout.onrender.com/?\" + queryString\n                : \"https://sandbox-winter-checkout.onrender.com/?\" + queryString;\n        setProjectUrl(url);\n    }, [\n        projectId,\n        production,\n        walletAddress,\n        email,\n        mintQuantity,\n        extraMintParams,\n        priceFunctionParams,\n        title,\n        erc1155Video,\n        brandImage,\n        title,\n    ]);\n\n    return showModal ? (\n        <div\n            dangerouslySetInnerHTML={{\n                __html: `<iframe id=\"winter-checkout\" src=\"${projectUrl}\" style=\"position: fixed; top: 0px; bottom: 0px; right: 0px; width: 100%; border: none; margin: 0px; padding: 0px; overflow: hidden; z-index: 999999; height: 100%;\" />`,\n            }}\n        />\n    ) : (\n        <></>\n    );\n};\n\nexport default WinterCheckout;","C:\\wamp64\\www\\lol\\src\\components\\homepage\\vote\\Vote.tsx",[],"C:\\wamp64\\www\\lol\\src\\components\\homepage\\drop\\Drop.tsx",["158"],"import React, { useRef, useState } from 'react';\r\nimport Button from \"../../button/Button\";\r\nimport DropCard from './drop-card/DropCard';\r\n\r\nimport { DropCardDT, ButtonDT } from '../../../Types';\r\n\r\nimport './Drop.css';\r\nimport button from \"../../button/Button\";\r\nimport { useIsVisible } from \"../../../utils/Utils\";\r\n\r\ninterface Props {\r\n    buttons: ButtonDT[],\r\n    dropCards: DropCardDT[]\r\n}\r\n\r\nfunction Drop({ buttons, dropCards }: Props) {\r\n    const ref = useRef(null);\r\n    const isVisible = useIsVisible(ref);\r\n\r\n    const [filteredDropCards, setFilteredDropCards] = useState(dropCards);\r\n    const [localButtons, setLocalButtons] = useState(buttons);\r\n\r\n    const filterByCategory = (category: string) => {\r\n        const filteredCards = dropCards.filter((dropCard) => {\r\n            return dropCard.category === category || category === 'All Categories' || category === 'Special Purpose';\r\n        });\r\n\r\n        const updatedButtons = localButtons.map((button) => {\r\n            if (button.text === category) {\r\n                return { ...button, isActive: true };\r\n            } else {\r\n                return { ...button, isActive: false }\r\n            }\r\n        });\r\n\r\n        setLocalButtons(updatedButtons);\r\n        setFilteredDropCards(filteredCards);\r\n    };\r\n\r\n    return (\r\n        <section id=\"drop\" className={isVisible ? 'fade-in-visible show' : 'fade-in-visible'} ref={ref}>\r\n            <div className=\"drop-inner\">\r\n                <h2>Drop 01</h2>\r\n                <div className=\"drop-categories\">\r\n                    {localButtons.map((button, i) => (\r\n                        <div key={i} className=\"drop-category-btn-wrapper\">\r\n                            <Button button={button} onClick={() => filterByCategory(button.text)} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"drop-categories-cards\">\r\n                    <div className=\"drop-single-category-cards row\">\r\n                        {filteredDropCards.map((item, i) => (\r\n                            <DropCard key={i} dropCard={item} />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Drop;","C:\\wamp64\\www\\lol\\src\\components\\homepage\\joke-ranking\\JokeRanking.tsx",[],"C:\\wamp64\\www\\lol\\src\\components\\homepage\\roadmap\\Roadmap.tsx",[],"C:\\wamp64\\www\\lol\\src\\components\\homepage\\jokestars\\Jokestars.tsx",[],"C:\\wamp64\\www\\lol\\src\\components\\homepage\\vote\\vote-card\\VoteCard.tsx",[],"C:\\wamp64\\www\\lol\\src\\components\\homepage\\drop\\drop-card\\DropCard.tsx",["159","160"],"import React, { useRef } from 'react';\r\n\r\nimport arrowRight from '../../../../assets/images/arrow-right.png';\r\nimport ethLogo from '../../../../assets/images/eth-logo.png';\r\nimport Mint from '../../../Mint'\r\nimport './DropCard.css';\r\n\r\nimport { DropCardDT } from '../../../../Types';\r\nimport { useIsVisible } from \"../../../../utils/Utils\";\r\n\r\ninterface Props {\r\n    dropCard: DropCardDT\r\n}\r\n\r\nfunction DropCard({ dropCard }: Props) {\r\n    const ref = useRef(null);\r\n    const isVisible = useIsVisible(ref);\r\n\r\n    return (\r\n        <div className={isVisible ? 'drop-card col-md-3 fade-in-visible show' : 'drop-card col-md-4 fade-in-visible'} ref={ref}>\r\n            <div className=\"drop-card-inner\">\r\n                <div className=\"drop-card-img\">\r\n                    <img src={dropCard.imageUrl} alt=\"nft-image\" />\r\n                    <p className=\"drop-card-time\">{dropCard.time}</p>\r\n                </div>\r\n                <div className=\"drop-card-meta\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n                            <div className=\"drop-card-thumb\">\r\n                                <img src={dropCard.thumbUrl} alt=\"thumb\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"offset-1 col-md-9\">\r\n                            <h5>{dropCard.name}</h5>\r\n                            <p>{dropCard.nickname}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <img src={ethLogo} alt=\"\" className=\"eth-logo\" />\r\n                        <h6 className=\"eth-price\">{dropCard.ethPrice} ETH</h6>\r\n                    </div>\r\n                    <img src={arrowRight} alt=\"\" className=\"arrow-right\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DropCard;","C:\\wamp64\\www\\lol\\src\\components\\homepage\\roadmap\\roadmap-card\\RoadmapCard.tsx",["161"],"import React, { useState } from 'react';\r\nimport { RoadmapCardDT } from '../../../../Types';\r\n\r\nimport './RoadmapCard.css';\r\n\r\ninterface Props {\r\n    index: number;\r\n    roadmapCard: RoadmapCardDT;\r\n    activeIndex: number;\r\n    setActiveIndex: (index: number) => void;\r\n}\r\n\r\nfunction RoadmapCard({ index, roadmapCard, activeIndex, setActiveIndex }: Props) {\r\n\r\n    const handleMouseOver = () => {\r\n        setActiveIndex(index);\r\n    };\r\n\r\n    const className = `roadmap-card ${activeIndex === index ? 'active' : ''}`;\r\n\r\n    return (\r\n        <div onMouseOver={handleMouseOver} className={className}>\r\n            <div className=\"roadmap-card-inner\">\r\n                <div className=\"roadmap-card-header\">\r\n                    <p>\r\n                        {index + 1} - {roadmapCard.title}\r\n                    </p>\r\n                </div>\r\n                <div className=\"roadmap-image\">\r\n                    <img src={roadmapCard.imageUrl} alt=\"roadmap-featured\" />\r\n                </div>\r\n                <div className=\"roadmap-desc\">\r\n                    <p>{roadmapCard.desc}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RoadmapCard;\r\n","C:\\wamp64\\www\\lol\\src\\components\\homepage\\joke-ranking\\joke-ranking-card\\JokeRankingCard.tsx",[],"C:\\wamp64\\www\\lol\\src\\components\\homepage\\jokestars\\jokestar\\Jokestar.tsx",["162","163"],"import React, {useRef} from 'react';\r\n\r\nimport './Jokestar.css';\r\n\r\nimport arrowRight from '../../../../assets/images/arrow-right.png';\r\nimport {useIsVisible} from \"../../../../utils/Utils\";\r\n\r\ninterface Props {\r\n    imageUrl: string,\r\n    linkUrl: string,\r\n    name: string,\r\n    desc: string\r\n}\r\n\r\nfunction Jokestar({ imageUrl, linkUrl, name, desc }: Props) {\r\n    return (\r\n        <div className=\"jokestar col-md-3\">\r\n            <div className=\"jokestar-inner\">\r\n                <img src={imageUrl} alt=\"jokestar-person\" className=\"jokestar-image\"/>\r\n                <div className=\"jokestar-cta\">\r\n                    <a href={linkUrl} className=\"jokestar-cta-link\">\r\n                        <h5>{name}</h5>\r\n                        <p>{desc}</p>\r\n                        <img src={arrowRight} alt=\"arrow-right\" className=\"arrow-right\"/>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Jokestar;",{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":15,"column":8,"nodeType":"170","messageId":"171","endLine":15,"endColumn":12},{"ruleId":"172","severity":1,"message":"173","line":32,"column":8,"nodeType":"174","endLine":32,"endColumn":10,"suggestions":"175"},{"ruleId":"176","severity":1,"message":"177","line":45,"column":21,"nodeType":"178","endLine":45,"endColumn":58},{"ruleId":"168","severity":1,"message":"179","line":6,"column":8,"nodeType":"170","messageId":"171","endLine":6,"endColumn":10},{"ruleId":"180","severity":1,"message":"181","line":28,"column":29,"nodeType":"178","messageId":"182","endLine":28,"endColumn":87,"fix":"183"},{"ruleId":"180","severity":1,"message":"181","line":29,"column":29,"nodeType":"178","messageId":"182","endLine":29,"endColumn":90,"fix":"184"},{"ruleId":"180","severity":1,"message":"181","line":30,"column":29,"nodeType":"178","messageId":"182","endLine":30,"endColumn":88,"fix":"185"},{"ruleId":"168","severity":1,"message":"186","line":3,"column":76,"nodeType":"170","messageId":"171","endLine":3,"endColumn":82},{"ruleId":"176","severity":1,"message":"177","line":44,"column":29,"nodeType":"178","endLine":44,"endColumn":92},{"ruleId":"187","severity":1,"message":"188","line":44,"column":37,"nodeType":"189","messageId":"190","endLine":44,"endColumn":57},{"ruleId":"168","severity":1,"message":"186","line":2,"column":8,"nodeType":"170","messageId":"171","endLine":2,"endColumn":14},{"ruleId":"168","severity":1,"message":"191","line":16,"column":11,"nodeType":"170","messageId":"171","endLine":16,"endColumn":27},{"ruleId":"168","severity":1,"message":"186","line":2,"column":10,"nodeType":"170","messageId":"171","endLine":2,"endColumn":16},{"ruleId":"172","severity":1,"message":"192","line":34,"column":8,"nodeType":"174","endLine":34,"endColumn":25,"suggestions":"193"},{"ruleId":"168","severity":1,"message":"194","line":1,"column":8,"nodeType":"170","messageId":"171","endLine":1,"endColumn":13},{"ruleId":"168","severity":1,"message":"186","line":2,"column":10,"nodeType":"170","messageId":"171","endLine":2,"endColumn":16},{"ruleId":"168","severity":1,"message":"195","line":15,"column":10,"nodeType":"170","messageId":"171","endLine":15,"endColumn":22},{"ruleId":"168","severity":1,"message":"196","line":16,"column":10,"nodeType":"170","messageId":"171","endLine":16,"endColumn":15},{"ruleId":"168","severity":1,"message":"197","line":38,"column":12,"nodeType":"170","messageId":"171","endLine":38,"endColumn":25},{"ruleId":"168","severity":1,"message":"198","line":38,"column":27,"nodeType":"170","messageId":"171","endLine":38,"endColumn":43},{"ruleId":"199","severity":1,"message":"200","line":187,"column":41,"nodeType":"178","endLine":187,"endColumn":92},{"ruleId":"199","severity":1,"message":"200","line":200,"column":41,"nodeType":"178","endLine":200,"endColumn":92},{"ruleId":"199","severity":1,"message":"200","line":213,"column":41,"nodeType":"178","endLine":213,"endColumn":92},{"ruleId":"172","severity":1,"message":"201","line":90,"column":8,"nodeType":"174","endLine":102,"endColumn":6,"suggestions":"202"},{"ruleId":"168","severity":1,"message":"203","line":8,"column":8,"nodeType":"170","messageId":"171","endLine":8,"endColumn":14},{"ruleId":"168","severity":1,"message":"169","line":5,"column":8,"nodeType":"170","messageId":"171","endLine":5,"endColumn":12},{"ruleId":"199","severity":1,"message":"200","line":23,"column":21,"nodeType":"178","endLine":23,"endColumn":68},{"ruleId":"168","severity":1,"message":"204","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":25},{"ruleId":"168","severity":1,"message":"205","line":1,"column":16,"nodeType":"170","messageId":"171","endLine":1,"endColumn":22},{"ruleId":"168","severity":1,"message":"206","line":6,"column":9,"nodeType":"170","messageId":"171","endLine":6,"endColumn":21},"no-native-reassign",["207"],"no-negated-in-lhs",["208"],"@typescript-eslint/no-unused-vars","'Mint' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'activate'. Either include it or remove the dependency array.","ArrayExpression",["209"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'fb' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"210","text":"211"},{"range":"212","text":"211"},{"range":"213","text":"211"},"'Button' is defined but never used.","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'button' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setIsOpen'. Either include it or remove the dependency array. If 'setIsOpen' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["214"],"'React' is defined but never used.","'isActiveSale' is defined but never used.","'Minus' is defined but never used.","'fullModalOpen' is assigned a value but never used.","'setFullModalOpen' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook useEffect has a missing dependency: 'testnet'. Either include it or remove the dependency array.",["215"],"'button' is defined but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'useIsVisible' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"216","fix":"217"},[1156,1156]," rel=\"noreferrer\"",[1290,1290],[1412,1412],{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},"Update the dependencies array to be: [activate]",{"range":"222","text":"223"},"Update the dependencies array to be: [active, account, setIsOpen]",{"range":"224","text":"225"},"Update the dependencies array to be: [projectId, production, walletAddress, email, mintQuantity, extraMintParams, priceFunctionParams, title, erc1155Video, brandImage, testnet]",{"range":"226","text":"227"},[1223,1225],"[activate]",[1122,1139],"[active, account, setIsOpen]",[2889,3121],"[projectId, production, walletAddress, email, mintQuantity, extraMintParams, priceFunctionParams, title, erc1155Video, brandImage, testnet]"]